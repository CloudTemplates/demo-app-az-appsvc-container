# This is a basic workflow that is manually triggered

name: Deploy

# Controls when the action will run. Workflow runs when manually triggered using the UI or API.
on:
  repository_dispatch:
    types: [ deploy-command ]

  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      version:
        description: 'Artifact ID'        # Friendly description to be shown in the UI instead of 'name'
        default: ''                       # Default value if no value is explicitly provided
        required: false                   # Input has to be provided for the workflow to run

      environment:
        description: 'Environment'        # Friendly description to be shown in the UI instead of 'name'
        required: true                    # Input has to be provided for the workflow to run
        type: choice
        options:
          - "dev"
          - "prod"

      region:
        description: 'Azure Region'       # Friendly description to be shown in the UI instead of 'name'
        required: true                    # Input has to be provided for the workflow to run
        type: choice
        options:
          - "eastus"
          - "westus"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
env:
  APPLICATION_NAME: demo-app
  APPLICATION_VERSION: ${{ github.event.client_payload.version || github.event.inputs.version }}
  ENVIRONMENT: ${{ github.event.client_payload.environment || github.event.inputs.environment }}
  REGION: ${{ github.event.client_payload.region || github.event.inputs.region }}
  GHEC_LOGIN_ACCOUNTNAME: 'preetishmadalia'
  ## Terraform Env Vars
  ARM_CLIENT_ID: ${{ secrets.TF_ARM_CLIENT_ID }}         # Service Principal ClientId with permissions to Resource Group
  ARM_CLIENT_SECRET: ${{ secrets.TF_ARM_CLIENT_SECRET }}     # Service Principal Secret with permissions to Resource Group
  ARM_SUBSCRIPTION_ID: ${{ secrets.TF_AZURE_SUBSCRIPTION_ID }} # Azure Subscription ID
  ARM_TENANT_ID: ${{ secrets.TF_AZURE_TENANT_ID }}       # Azure TenantId
  TERRAFORM_VERSION: 1.1.9


jobs:
  setup-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Environment
        id: envId
        run: |
          if [[ ${{ github.event.client_payload.environment || github.event.inputs.environment }} == 'prod' ]]; then
            echo "::set-output name=env-nm::p"
          else
            echo "::set-output name=env-nm::d"
          fi

          if [[ ${{ github.event.client_payload.region || github.event.inputs.region }} == 'eastus' ]]; then
            echo "::set-output name=region-nm::azeast"
          else
            echo "::set-output name=region-nm::azwest"
          fi
    outputs:
      env-name: ${{ steps.envId.outputs.env-nm }}
      region-nm: ${{ steps.envId.outputs.region-nm }}

  terraform:
    environment: ${{ github.event.client_payload.environment || github.event.inputs.environment }}
    name: Terraform - ${{ github.event.client_payload.environment || github.event.inputs.environment }} - ${{ github.event.client_payload.region || github.event.inputs.region }}
    runs-on: ubuntu-latest
    needs: setup-environment

    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0

      #Install Terraform
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      #Run terraform on resource group folder
      - name: Azure RG Terraform Step
        run: |
          git config --global url."https://${{ env.GHEC_LOGIN_ACCOUNTNAME }}:${{ env.GITHUB_TOKEN }}@github.com/CloudTemplates/".insteadOf "https://github.com/CloudTemplates/"
          cd ./src/terraform
          terraform -v
          terraform init
          terraform plan -var-file="${{ env.ENVIRONMENT }}-${{ env.REGION }}.tfvars"
          terraform apply -var-file="${{ env.ENVIRONMENT }}-${{ env.REGION }}.tfvars"  -auto-approve
        env:
          GITHUB_TOKEN : ${{ secrets.CLOUDTEMPLATES_TOKEN }}

  deploy:
    environment: ${{ github.event.client_payload.environment || github.event.inputs.environment }}
    name: Deploy App - ${{ github.event.client_payload.environment || github.event.inputs.environment }} - ${{ github.event.client_payload.region || github.event.inputs.region }}
    runs-on: ubuntu-latest
    needs: [setup-environment, terraform]

    steps:
      - name: Checkout Code from the repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker(Container Registry) Login
        uses: docker/login-action@v1.14.1
        with:
         username: ${{ secrets.DOCKER_REGISTRY_USR }}
         password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - name: Deploy to Azure Web App Service - ${{ steps.artifactId.outputs.artifact-version }}
        uses: azure/webapps-deploy@v2
        with:
          app-name: demoapp-${{ env.ENV_NM }}-${{ env.REGION_NM }}-ap
          images: 'https://index.docker.io/pmadalia:${{ env.APPLICATION_VERSION }}'
        env:
          ENV_NM: ${{ needs.setup-environment.outputs.env-name }}
          REGION_NM: ${{ needs.setup-environment.outputs.region-nm }}

      - name: Azure logout
        run: |
            az logout